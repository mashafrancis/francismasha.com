"use client";

import * as motion from "motion/react-m";
import React, { useEffect, useRef, useState } from "react";

function WordmarkPaths() {
  return (
    <>
      <path d="M409 2L541.94 49.348C588.687 64.8638 588.687 131.137 541.94 146.653L409 194V162.013L532.483 118.034C551.732 111.645 551.732 84.3559 532.483 77.967L428.553 40.2476L361 194L228.06 146.653C181.313 131.137 181.313 64.8638 228.06 49.348L361 2V33.987L237.517 77.967C218.268 84.3559 218.268 111.645 237.517 118.034L341.447 155.752L409 2Z" />
      <path d="M38.3132 386C30.8077 386 24.2136 384.606 18.5308 381.819C12.9552 378.925 8.61276 374.905 5.50332 369.759C2.50111 364.506 1 358.342 1 351.266V300.131C1 292.948 2.50111 286.784 5.50332 281.638C8.61276 276.492 12.9552 272.526 18.5308 269.739C24.2136 266.844 30.8077 265.397 38.3132 265.397C45.926 265.397 52.4666 266.844 57.9349 269.739C63.5104 272.526 67.8529 276.492 70.9623 281.638C74.0718 286.784 75.6265 292.948 75.6265 300.131H55.3615C55.3615 294.556 53.8604 290.322 50.8582 287.427C47.9632 284.533 43.7816 283.085 38.3132 283.085C32.8449 283.085 28.6097 284.533 25.6074 287.427C22.6052 290.322 21.1041 294.503 21.1041 299.97V351.266C21.1041 356.734 22.6052 360.968 25.6074 363.97C28.6097 366.864 32.8449 368.312 38.3132 368.312C43.7816 368.312 47.9632 366.864 50.8582 363.97C53.8604 360.968 55.3615 356.734 55.3615 351.266H75.6265C75.6265 358.235 74.0718 364.345 70.9623 369.598C67.8529 374.851 63.5104 378.925 57.9349 381.819C52.4666 384.606 45.926 386 38.3132 386Z" />
      <path d="M100.352 384.392V267.005H120.456V295.95L119.974 312.834H125.442L119.974 317.497C119.974 310.208 122.064 304.526 126.246 300.452C130.535 296.379 136.379 294.342 143.777 294.342C152.462 294.342 159.378 297.236 164.524 303.025C169.778 308.814 172.405 316.586 172.405 326.342V384.392H152.301V328.432C152.301 323.072 150.907 318.945 148.119 316.05C145.332 313.156 141.418 311.709 136.379 311.709C131.446 311.709 127.533 313.209 124.638 316.211C121.85 319.213 120.456 323.501 120.456 329.075V384.392H100.352Z" />
      <path d="M224.955 386C215.841 386 208.657 383.588 203.403 378.764C198.149 373.94 195.522 367.454 195.522 359.307C195.522 350.623 198.417 343.923 204.207 339.206C209.997 334.489 218.2 332.131 228.815 332.131H250.849V324.573C250.849 320.285 249.455 316.961 246.667 314.603C243.88 312.137 240.073 310.905 235.248 310.905C230.852 310.905 227.207 311.869 224.312 313.799C221.417 315.729 219.701 318.355 219.165 321.678H199.543C200.508 313.317 204.261 306.67 210.802 301.739C217.342 296.807 225.705 294.342 235.892 294.342C246.721 294.342 255.245 297.075 261.464 302.543C267.79 307.903 270.953 315.193 270.953 324.412V384.392H251.492V368.955H248.276L251.492 364.613C251.492 371.152 249.08 376.352 244.255 380.211C239.43 384.07 232.997 386 224.955 386ZM231.549 370.884C237.232 370.884 241.842 369.437 245.381 366.543C249.026 363.648 250.849 359.896 250.849 355.286V344.513H229.137C225.062 344.513 221.792 345.692 219.326 348.05C216.86 350.409 215.627 353.518 215.627 357.377C215.627 361.558 217.02 364.881 219.808 367.347C222.703 369.705 226.617 370.884 231.549 370.884Z" />
      <path d="M297.448 384.392V295.95H317.069V312.834H322.538L317.069 317.497C317.069 310.208 319.16 304.526 323.342 300.452C327.631 296.379 333.474 294.342 340.873 294.342C349.558 294.342 356.474 297.236 361.62 303.025C366.874 308.814 369.501 316.586 369.501 326.342V384.392H349.397V328.432C349.397 323.072 348.003 318.945 345.215 316.05C342.427 313.156 338.514 311.709 333.474 311.709C328.542 311.709 324.629 313.209 321.734 316.211C318.946 319.213 317.552 323.501 317.552 329.075V384.392H297.448Z" />
      <path d="M395.996 384.392V267.005H416.1V295.95L415.617 312.834H421.086L415.617 317.497C415.617 310.208 417.708 304.526 421.89 300.452C426.179 296.379 432.022 294.342 439.421 294.342C448.106 294.342 455.021 297.236 460.168 303.025C465.422 308.814 468.049 316.586 468.049 326.342V384.392H447.945V328.432C447.945 323.072 446.551 318.945 443.763 316.05C440.975 313.156 437.062 311.709 432.022 311.709C427.09 311.709 423.176 313.209 420.281 316.211C417.494 319.213 416.1 323.501 416.1 329.075V384.392H395.996Z" />
      <path d="M494.222 384.392V267.005H529.123C537.057 267.005 543.919 268.506 549.709 271.508C555.606 274.509 560.163 278.744 563.38 284.211C566.597 289.678 568.205 296.164 568.205 303.668V347.568C568.205 354.965 566.597 361.451 563.38 367.025C560.163 372.492 555.606 376.781 549.709 379.889C543.919 382.891 537.057 384.392 529.123 384.392H494.222ZM514.326 365.9H529.123C534.913 365.9 539.523 364.291 542.954 361.075C546.385 357.752 548.101 353.25 548.101 347.568V303.668C548.101 298.094 546.385 293.699 542.954 290.482C539.523 287.159 534.913 285.497 529.123 285.497H514.326V365.9Z" />
      <path d="M619.146 386C610.032 386 602.849 383.588 597.595 378.764C592.341 373.94 589.714 367.454 589.714 359.307C589.714 350.623 592.609 343.923 598.399 339.206C604.189 334.489 612.391 332.131 623.006 332.131H645.04V324.573C645.04 320.285 643.647 316.961 640.859 314.603C638.071 312.137 634.265 310.905 629.44 310.905C625.044 310.905 621.398 311.869 618.503 313.799C615.608 315.729 613.892 318.355 613.356 321.678H593.735C594.7 313.317 598.453 306.67 604.993 301.739C611.534 296.807 619.897 294.342 630.083 294.342C640.912 294.342 649.437 297.075 655.655 302.543C661.982 307.903 665.145 315.193 665.145 324.412V384.392H645.684V368.955H642.467L645.684 364.613C645.684 371.152 643.271 376.352 638.446 380.211C633.621 384.07 627.188 386 619.146 386ZM625.741 370.884C631.423 370.884 636.034 369.437 639.572 366.543C643.218 363.648 645.04 359.896 645.04 355.286V344.513H623.328C619.254 344.513 615.983 345.692 613.517 348.05C611.051 350.409 609.818 353.518 609.818 357.377C609.818 361.558 611.212 364.881 614 367.347C616.895 369.705 620.808 370.884 625.741 370.884Z" />
      <path d="M691.479 384.392V366.06H722.358V314.121H695.499V295.95H741.658V366.06H769V384.392H691.479ZM730.4 281.156C726.326 281.156 723.109 280.137 720.75 278.1C718.391 275.956 717.212 273.116 717.212 269.578C717.212 266.04 718.391 263.253 720.75 261.216C723.109 259.072 726.326 258 730.4 258C734.475 258 737.691 259.072 740.05 261.216C742.409 263.253 743.588 266.04 743.588 269.578C743.588 273.116 742.409 275.956 740.05 278.1C737.691 280.137 734.475 281.156 730.4 281.156Z" />
    </>
  );
}

export function WordmarkHoverEffect() {
  const containerRef = useRef<SVGSVGElement>(null);
  const [cursor, setCursor] = useState({ x: 0, y: 0 });
  const [hovered, setHovered] = useState(false);
  const [maskPosition, setMaskPosition] = useState({ cx: "50%", cy: "50%" });

  useEffect(() => {
    if (containerRef.current && cursor.x !== null && cursor.y !== null) {
      const svgRect = containerRef.current.getBoundingClientRect();
      const cxPercentage = ((cursor.x - svgRect.left) / svgRect.width) * 100;
      const cyPercentage = ((cursor.y - svgRect.top) / svgRect.height) * 100;
      setMaskPosition({
        cx: `${cxPercentage}%`,
        cy: `${cyPercentage}%`,
      });
    }
  }, [cursor]);

  return (
    <svg
      ref={containerRef}
      className="size-full select-none"
      viewBox="0 0 770 387"
      xmlns="http://www.w3.org/2000/svg"
      onMouseEnter={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      onMouseMove={(e) => setCursor({ x: e.clientX, y: e.clientY })}
    >
      <defs>
        <linearGradient
          id="logoGradient"
          gradientUnits="userSpaceOnUse"
          cx="50%"
          cy="50%"
          r="25%"
        >
          {hovered && (
            <>
              <stop offset="0%" stopColor={"var(--color-yellow-500)"} />
              <stop offset="25%" stopColor={"var(--color-red-500)"} />
              <stop offset="50%" stopColor={"var(--color-blue-500)"} />
              <stop offset="75%" stopColor={"var(--color-cyan-500)"} />
              <stop offset="100%" stopColor={"var(--color-violet-500)"} />
            </>
          )}
        </linearGradient>

        <motion.radialGradient
          id="revealMask"
          gradientUnits="userSpaceOnUse"
          r="15%"
          initial={{ cx: "50%", cy: "50%" }}
          animate={maskPosition}
          transition={{ duration: 0, ease: "easeInOut" }}
        >
          <stop offset="0%" stopColor="white" />
          <stop offset="100%" stopColor="black" />
        </motion.radialGradient>

        <mask
          id="logoMask"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="770"
          height="387"
          fill="black"
        >
          <rect fill="url(#revealMask)" width="770" height="387" />
          <WordmarkPaths />
        </mask>

        <mask
          id="pathOutsideMask"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="770"
          height="387"
          fill="black"
        >
          <rect fill="white" width="770" height="387" />
          <WordmarkPaths />
        </mask>
      </defs>

      <g
        className="fill-transparent stroke-border"
        strokeWidth="2"
        mask="url(#pathOutsideMask)"
      >
        <WordmarkPaths />
      </g>

      <g
        className="fill-transparent"
        stroke="url(#logoGradient)"
        strokeWidth="2"
        mask="url(#logoMask)"
      >
        <WordmarkPaths />
      </g>
    </svg>
  );
}
